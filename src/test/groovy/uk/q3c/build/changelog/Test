   def "generate change log, config already set"() {
        given:
        ChangeLog changeLog = Mock(ChangeLog)
        gitplus.setChangelog(changeLog)
        File f = new File('.')

        when:
        File result = gitplus.generateChangeLog()

        then:
        1 * changeLog.createChangeLog() >> f
        result == f
    }

    def "generate change log, config provided"() {
        given:
        ChangeLog changeLog = Mock(ChangeLog)
        gitplus.setChangelog(changeLog)
        File f = new File('.')
        ChangeLogConfiguration changeLogConfiguration = Mock(ChangeLogConfiguration)

        when:
        File result = gitplus.generateChangeLog(changeLogConfiguration)

        then:
        1 * changeLog.setConfiguration(changeLogConfiguration)
        1 * changeLog.createChangeLog() >> f
        result == f
    }

    def "generate change log, change output target"() {
        given:
        ChangeLog changeLog = Mock(ChangeLog)
        gitplus.setChangelog(changeLog)
        File f = new File('.')
        ChangeLogConfiguration changeLogConfiguration = Mock(ChangeLogConfiguration)

        when:
        File result = gitplus.generateChangeLog(PROJECT_BUILD_ROOT)

        then:
        1 * changeLog.getConfiguration() >> changeLogConfiguration
        1 * changeLogConfiguration.outputTarget(PROJECT_BUILD_ROOT)
        1 * changeLog.createChangeLog() >> f
        result == f
    }

    def "generate change log, change output file"() {
        given:
        ChangeLog changeLog = Mock(ChangeLog)
        gitplus.setChangelog(changeLog)
        File f = new File('.')
        ChangeLogConfiguration changeLogConfiguration = Mock(ChangeLogConfiguration)

        when:
        File result = gitplus.generateChangeLog(f)

        then:
        1 * changeLog.getConfiguration() >> changeLogConfiguration
        1 * changeLogConfiguration.outputFile(f) >> changeLogConfiguration
        1 * changeLogConfiguration.outputTarget(USE_FILE_SPEC) >> changeLogConfiguration
        1 * changeLog.createChangeLog() >> f
        result == f
    }
