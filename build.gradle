//noinspection GrPackage
buildscript {
    ext.kotlin_version = '1.1.2-2'
    repositories {
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'idea'
    id 'eclipse-wtp'
    id 'org.unbroken-dome.test-sets' version '1.2.0'
    id 'maven'
    id 'maven-publish'
}

apply plugin: 'kotlin'
apply plugin: "jacoco"

version = '0.4.2.22'
group = 'uk.q3c.build'

repositories {
    jcenter()
    mavenLocal()
}

dependencies {
    //Git
    compile 'uk.q3c.build:gitplus:0.24.3.78'
    //guice
    compile 'com.google.inject:guice:4.1.0'

    // JSON
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.8'

    // kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //Logging
    compile 'org.slf4j:slf4j-api:1.7.5'

    //template
    compile 'org.apache.velocity:velocity:1.7'
    compile 'org.apache.velocity:velocity-tools:2.0'

    //unit testing
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:3.2.0' // needed for Spock mocking
    testCompile 'org.objenesis:objenesis:2.2' // needed for Spock mocking
    testCompile 'org.spockframework:spock-guice:1.0-groovy-2.4' // Spock with Guice
    testCompile 'org.assertj:assertj-core:3.5.2'
    testCompile 'uk.q3c:q3c-testUtil:0.9.0.140'
    testCompile 'commons-codec:commons-codec:1.10'

    //json testing
    testCompile 'com.fasterxml.jackson.core:jackson-databind:2.8.8'


}

publishing {
    publications {
        mavenStuff(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
